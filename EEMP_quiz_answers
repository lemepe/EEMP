{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# EEMP - Python Quiz"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Import the following packages and alias them as we did before: \n",
    "    - *numpy, pandas, matplotlib, seaborn, statsmodels*"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import statsmodels.api as sm\n",
    "import statsmodels.formula.api as smf"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "2. Read in the employee dataset, we were using before, saving as *employee_data*.\n",
    "    - Show the first 20 rows of the dataset. \n",
    "    - Before that, set the maximum number of columns to be displayed to 200 \n",
    "        - Hint: pd.set_option('display.max_columns', #cols)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>Attrition</th>\n",
       "      <th>BusinessTravel</th>\n",
       "      <th>DailyRate</th>\n",
       "      <th>Department</th>\n",
       "      <th>DistanceFromHome</th>\n",
       "      <th>Education</th>\n",
       "      <th>EducationField</th>\n",
       "      <th>EmployeeCount</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>EnvironmentSatisfaction</th>\n",
       "      <th>Gender</th>\n",
       "      <th>HourlyRate</th>\n",
       "      <th>JobInvolvement</th>\n",
       "      <th>JobLevel</th>\n",
       "      <th>JobRole</th>\n",
       "      <th>JobSatisfaction</th>\n",
       "      <th>MaritalStatus</th>\n",
       "      <th>MonthlyIncome</th>\n",
       "      <th>MonthlyRate</th>\n",
       "      <th>NumCompaniesWorked</th>\n",
       "      <th>Over18</th>\n",
       "      <th>OverTime</th>\n",
       "      <th>PercentSalaryHike</th>\n",
       "      <th>PerformanceRating</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>41</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1102</td>\n",
       "      <td>Sales</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>94</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Sales Executive</td>\n",
       "      <td>4</td>\n",
       "      <td>Single</td>\n",
       "      <td>5993</td>\n",
       "      <td>19479</td>\n",
       "      <td>8</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>49</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>279</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>61</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>2</td>\n",
       "      <td>Married</td>\n",
       "      <td>5130</td>\n",
       "      <td>24907</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>23</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>37</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1373</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Other</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>92</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>3</td>\n",
       "      <td>Single</td>\n",
       "      <td>2090</td>\n",
       "      <td>2396</td>\n",
       "      <td>6</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>15</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>33</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>1392</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>3</td>\n",
       "      <td>Married</td>\n",
       "      <td>2909</td>\n",
       "      <td>23159</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>27</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>591</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Medical</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>40</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>2</td>\n",
       "      <td>Married</td>\n",
       "      <td>3468</td>\n",
       "      <td>16632</td>\n",
       "      <td>9</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>5</td>\n",
       "      <td>32</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>1005</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>79</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>4</td>\n",
       "      <td>Single</td>\n",
       "      <td>3068</td>\n",
       "      <td>11864</td>\n",
       "      <td>0</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>6</td>\n",
       "      <td>59</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1324</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>Medical</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>Female</td>\n",
       "      <td>81</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>1</td>\n",
       "      <td>Married</td>\n",
       "      <td>2670</td>\n",
       "      <td>9964</td>\n",
       "      <td>4</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>20</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>7</td>\n",
       "      <td>30</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1358</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>24</td>\n",
       "      <td>1</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>67</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>3</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>2693</td>\n",
       "      <td>13335</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>22</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>8</td>\n",
       "      <td>38</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Frequently</td>\n",
       "      <td>216</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>23</td>\n",
       "      <td>3</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>44</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Manufacturing Director</td>\n",
       "      <td>3</td>\n",
       "      <td>Single</td>\n",
       "      <td>9526</td>\n",
       "      <td>8787</td>\n",
       "      <td>0</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>21</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>9</td>\n",
       "      <td>36</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1299</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>27</td>\n",
       "      <td>3</td>\n",
       "      <td>Medical</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>94</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>Healthcare Representative</td>\n",
       "      <td>3</td>\n",
       "      <td>Married</td>\n",
       "      <td>5237</td>\n",
       "      <td>16577</td>\n",
       "      <td>6</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>10</td>\n",
       "      <td>35</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>809</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>16</td>\n",
       "      <td>3</td>\n",
       "      <td>Medical</td>\n",
       "      <td>1</td>\n",
       "      <td>14</td>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>84</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>2</td>\n",
       "      <td>Married</td>\n",
       "      <td>2426</td>\n",
       "      <td>16479</td>\n",
       "      <td>0</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>11</td>\n",
       "      <td>29</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>153</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>15</td>\n",
       "      <td>2</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>4</td>\n",
       "      <td>Female</td>\n",
       "      <td>49</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>3</td>\n",
       "      <td>Single</td>\n",
       "      <td>4193</td>\n",
       "      <td>12682</td>\n",
       "      <td>0</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>12</td>\n",
       "      <td>31</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>670</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>16</td>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>31</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>3</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>2911</td>\n",
       "      <td>15170</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>17</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>13</td>\n",
       "      <td>34</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1346</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>19</td>\n",
       "      <td>2</td>\n",
       "      <td>Medical</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>2</td>\n",
       "      <td>Male</td>\n",
       "      <td>93</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>4</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>2661</td>\n",
       "      <td>8758</td>\n",
       "      <td>0</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>14</td>\n",
       "      <td>28</td>\n",
       "      <td>Yes</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>103</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>24</td>\n",
       "      <td>3</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>19</td>\n",
       "      <td>3</td>\n",
       "      <td>Male</td>\n",
       "      <td>50</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>3</td>\n",
       "      <td>Single</td>\n",
       "      <td>2028</td>\n",
       "      <td>12947</td>\n",
       "      <td>5</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>14</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>15</td>\n",
       "      <td>29</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1389</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>21</td>\n",
       "      <td>4</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>2</td>\n",
       "      <td>Female</td>\n",
       "      <td>51</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>Manufacturing Director</td>\n",
       "      <td>1</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>9980</td>\n",
       "      <td>10195</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>16</td>\n",
       "      <td>32</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>334</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>1</td>\n",
       "      <td>Male</td>\n",
       "      <td>80</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>2</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>3298</td>\n",
       "      <td>15053</td>\n",
       "      <td>0</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>12</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>17</td>\n",
       "      <td>22</td>\n",
       "      <td>No</td>\n",
       "      <td>Non-Travel</td>\n",
       "      <td>1123</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>16</td>\n",
       "      <td>2</td>\n",
       "      <td>Medical</td>\n",
       "      <td>1</td>\n",
       "      <td>22</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>96</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Laboratory Technician</td>\n",
       "      <td>4</td>\n",
       "      <td>Divorced</td>\n",
       "      <td>2935</td>\n",
       "      <td>7324</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>18</td>\n",
       "      <td>53</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>1219</td>\n",
       "      <td>Sales</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>1</td>\n",
       "      <td>Female</td>\n",
       "      <td>78</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>Manager</td>\n",
       "      <td>4</td>\n",
       "      <td>Married</td>\n",
       "      <td>15427</td>\n",
       "      <td>22021</td>\n",
       "      <td>2</td>\n",
       "      <td>Y</td>\n",
       "      <td>No</td>\n",
       "      <td>16</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>25</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>19</td>\n",
       "      <td>38</td>\n",
       "      <td>No</td>\n",
       "      <td>Travel_Rarely</td>\n",
       "      <td>371</td>\n",
       "      <td>Research &amp; Development</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>Life Sciences</td>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>4</td>\n",
       "      <td>Male</td>\n",
       "      <td>45</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Research Scientist</td>\n",
       "      <td>4</td>\n",
       "      <td>Single</td>\n",
       "      <td>3944</td>\n",
       "      <td>4306</td>\n",
       "      <td>5</td>\n",
       "      <td>Y</td>\n",
       "      <td>Yes</td>\n",
       "      <td>11</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>80</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Age Attrition     BusinessTravel  DailyRate              Department  \\\n",
       "0    41       Yes      Travel_Rarely       1102                   Sales   \n",
       "1    49        No  Travel_Frequently        279  Research & Development   \n",
       "2    37       Yes      Travel_Rarely       1373  Research & Development   \n",
       "3    33        No  Travel_Frequently       1392  Research & Development   \n",
       "4    27        No      Travel_Rarely        591  Research & Development   \n",
       "5    32        No  Travel_Frequently       1005  Research & Development   \n",
       "6    59        No      Travel_Rarely       1324  Research & Development   \n",
       "7    30        No      Travel_Rarely       1358  Research & Development   \n",
       "8    38        No  Travel_Frequently        216  Research & Development   \n",
       "9    36        No      Travel_Rarely       1299  Research & Development   \n",
       "10   35        No      Travel_Rarely        809  Research & Development   \n",
       "11   29        No      Travel_Rarely        153  Research & Development   \n",
       "12   31        No      Travel_Rarely        670  Research & Development   \n",
       "13   34        No      Travel_Rarely       1346  Research & Development   \n",
       "14   28       Yes      Travel_Rarely        103  Research & Development   \n",
       "15   29        No      Travel_Rarely       1389  Research & Development   \n",
       "16   32        No      Travel_Rarely        334  Research & Development   \n",
       "17   22        No         Non-Travel       1123  Research & Development   \n",
       "18   53        No      Travel_Rarely       1219                   Sales   \n",
       "19   38        No      Travel_Rarely        371  Research & Development   \n",
       "\n",
       "    DistanceFromHome  Education EducationField  EmployeeCount  EmployeeNumber  \\\n",
       "0                  1          2  Life Sciences              1               1   \n",
       "1                  8          1  Life Sciences              1               2   \n",
       "2                  2          2          Other              1               4   \n",
       "3                  3          4  Life Sciences              1               5   \n",
       "4                  2          1        Medical              1               7   \n",
       "5                  2          2  Life Sciences              1               8   \n",
       "6                  3          3        Medical              1              10   \n",
       "7                 24          1  Life Sciences              1              11   \n",
       "8                 23          3  Life Sciences              1              12   \n",
       "9                 27          3        Medical              1              13   \n",
       "10                16          3        Medical              1              14   \n",
       "11                15          2  Life Sciences              1              15   \n",
       "12                26          1  Life Sciences              1              16   \n",
       "13                19          2        Medical              1              18   \n",
       "14                24          3  Life Sciences              1              19   \n",
       "15                21          4  Life Sciences              1              20   \n",
       "16                 5          2  Life Sciences              1              21   \n",
       "17                16          2        Medical              1              22   \n",
       "18                 2          4  Life Sciences              1              23   \n",
       "19                 2          3  Life Sciences              1              24   \n",
       "\n",
       "    EnvironmentSatisfaction  Gender  HourlyRate  JobInvolvement  JobLevel  \\\n",
       "0                         2  Female          94               3         2   \n",
       "1                         3    Male          61               2         2   \n",
       "2                         4    Male          92               2         1   \n",
       "3                         4  Female          56               3         1   \n",
       "4                         1    Male          40               3         1   \n",
       "5                         4    Male          79               3         1   \n",
       "6                         3  Female          81               4         1   \n",
       "7                         4    Male          67               3         1   \n",
       "8                         4    Male          44               2         3   \n",
       "9                         3    Male          94               3         2   \n",
       "10                        1    Male          84               4         1   \n",
       "11                        4  Female          49               2         2   \n",
       "12                        1    Male          31               3         1   \n",
       "13                        2    Male          93               3         1   \n",
       "14                        3    Male          50               2         1   \n",
       "15                        2  Female          51               4         3   \n",
       "16                        1    Male          80               4         1   \n",
       "17                        4    Male          96               4         1   \n",
       "18                        1  Female          78               2         4   \n",
       "19                        4    Male          45               3         1   \n",
       "\n",
       "                      JobRole  JobSatisfaction MaritalStatus  MonthlyIncome  \\\n",
       "0             Sales Executive                4        Single           5993   \n",
       "1          Research Scientist                2       Married           5130   \n",
       "2       Laboratory Technician                3        Single           2090   \n",
       "3          Research Scientist                3       Married           2909   \n",
       "4       Laboratory Technician                2       Married           3468   \n",
       "5       Laboratory Technician                4        Single           3068   \n",
       "6       Laboratory Technician                1       Married           2670   \n",
       "7       Laboratory Technician                3      Divorced           2693   \n",
       "8      Manufacturing Director                3        Single           9526   \n",
       "9   Healthcare Representative                3       Married           5237   \n",
       "10      Laboratory Technician                2       Married           2426   \n",
       "11      Laboratory Technician                3        Single           4193   \n",
       "12         Research Scientist                3      Divorced           2911   \n",
       "13      Laboratory Technician                4      Divorced           2661   \n",
       "14      Laboratory Technician                3        Single           2028   \n",
       "15     Manufacturing Director                1      Divorced           9980   \n",
       "16         Research Scientist                2      Divorced           3298   \n",
       "17      Laboratory Technician                4      Divorced           2935   \n",
       "18                    Manager                4       Married          15427   \n",
       "19         Research Scientist                4        Single           3944   \n",
       "\n",
       "    MonthlyRate  NumCompaniesWorked Over18 OverTime  PercentSalaryHike  \\\n",
       "0         19479                   8      Y      Yes                 11   \n",
       "1         24907                   1      Y       No                 23   \n",
       "2          2396                   6      Y      Yes                 15   \n",
       "3         23159                   1      Y      Yes                 11   \n",
       "4         16632                   9      Y       No                 12   \n",
       "5         11864                   0      Y       No                 13   \n",
       "6          9964                   4      Y      Yes                 20   \n",
       "7         13335                   1      Y       No                 22   \n",
       "8          8787                   0      Y       No                 21   \n",
       "9         16577                   6      Y       No                 13   \n",
       "10        16479                   0      Y       No                 13   \n",
       "11        12682                   0      Y      Yes                 12   \n",
       "12        15170                   1      Y       No                 17   \n",
       "13         8758                   0      Y       No                 11   \n",
       "14        12947                   5      Y      Yes                 14   \n",
       "15        10195                   1      Y       No                 11   \n",
       "16        15053                   0      Y      Yes                 12   \n",
       "17         7324                   1      Y      Yes                 13   \n",
       "18        22021                   2      Y       No                 16   \n",
       "19         4306                   5      Y      Yes                 11   \n",
       "\n",
       "    PerformanceRating  RelationshipSatisfaction  StandardHours  \\\n",
       "0                   3                         1             80   \n",
       "1                   4                         4             80   \n",
       "2                   3                         2             80   \n",
       "3                   3                         3             80   \n",
       "4                   3                         4             80   \n",
       "5                   3                         3             80   \n",
       "6                   4                         1             80   \n",
       "7                   4                         2             80   \n",
       "8                   4                         2             80   \n",
       "9                   3                         2             80   \n",
       "10                  3                         3             80   \n",
       "11                  3                         4             80   \n",
       "12                  3                         4             80   \n",
       "13                  3                         3             80   \n",
       "14                  3                         2             80   \n",
       "15                  3                         3             80   \n",
       "16                  3                         4             80   \n",
       "17                  3                         2             80   \n",
       "18                  3                         3             80   \n",
       "19                  3                         3             80   \n",
       "\n",
       "    StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n",
       "0                  0                  8                      0   \n",
       "1                  1                 10                      3   \n",
       "2                  0                  7                      3   \n",
       "3                  0                  8                      3   \n",
       "4                  1                  6                      3   \n",
       "5                  0                  8                      2   \n",
       "6                  3                 12                      3   \n",
       "7                  1                  1                      2   \n",
       "8                  0                 10                      2   \n",
       "9                  2                 17                      3   \n",
       "10                 1                  6                      5   \n",
       "11                 0                 10                      3   \n",
       "12                 1                  5                      1   \n",
       "13                 1                  3                      2   \n",
       "14                 0                  6                      4   \n",
       "15                 1                 10                      1   \n",
       "16                 2                  7                      5   \n",
       "17                 2                  1                      2   \n",
       "18                 0                 31                      3   \n",
       "19                 0                  6                      3   \n",
       "\n",
       "    WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n",
       "0                 1               6                   4   \n",
       "1                 3              10                   7   \n",
       "2                 3               0                   0   \n",
       "3                 3               8                   7   \n",
       "4                 3               2                   2   \n",
       "5                 2               7                   7   \n",
       "6                 2               1                   0   \n",
       "7                 3               1                   0   \n",
       "8                 3               9                   7   \n",
       "9                 2               7                   7   \n",
       "10                3               5                   4   \n",
       "11                3               9                   5   \n",
       "12                2               5                   2   \n",
       "13                3               2                   2   \n",
       "14                3               4                   2   \n",
       "15                3              10                   9   \n",
       "16                2               6                   2   \n",
       "17                2               1                   0   \n",
       "18                3              25                   8   \n",
       "19                3               3                   2   \n",
       "\n",
       "    YearsSinceLastPromotion  YearsWithCurrManager  \n",
       "0                         0                     5  \n",
       "1                         1                     7  \n",
       "2                         0                     0  \n",
       "3                         3                     0  \n",
       "4                         2                     2  \n",
       "5                         3                     6  \n",
       "6                         0                     0  \n",
       "7                         0                     0  \n",
       "8                         1                     8  \n",
       "9                         7                     7  \n",
       "10                        0                     3  \n",
       "11                        0                     8  \n",
       "12                        4                     3  \n",
       "13                        1                     2  \n",
       "14                        0                     3  \n",
       "15                        8                     8  \n",
       "16                        0                     5  \n",
       "17                        0                     0  \n",
       "18                        3                     7  \n",
       "19                        1                     2  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "path_to_data = \"https://raw.githubusercontent.com/lemepe/EEMP/master/python_intro/Employee_data.csv\"\n",
    "employee_data=pd.read_csv(path_to_data)\n",
    "\n",
    "pd.set_option('display.max_columns', 200)\n",
    "employee_data.head(20)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "3. Create a new dataset consisting of only employees that work in the \"Research & Development\" department, saving it as *employee_data_RD*.\n",
    "    - Print the shape, i.e. number of rows and columns, of this new dataset.\n",
    "    - Check that all observations of employees in this dataset are indeed working in the R&D department.\n",
    "        - Hint: using the *value_counts()* method is one way to check this."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(961, 35)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Research & Development    961\n",
       "Name: Department, dtype: int64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "employee_data_RD = employee_data[employee_data['Department']==\"Research & Development\"]\n",
    "\n",
    "print(employee_data_RD.shape)\n",
    "\n",
    "employee_data_RD.Department.value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4. Create a new variable *dummy_retained*, which indicates whether the employee is still with the employer.\n",
    "    - Hint: Attrition == 'No"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/lea.petters/anaconda3/envs/eemp/lib/python3.7/site-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  \"\"\"Entry point for launching an IPython kernel.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "(961, 36)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "employee_data_RD['dummy_retained'] = 0\n",
    "employee_data_RD.loc[employee_data_RD['Attrition']=='No','dummy_retained']=1\n",
    "\n",
    "employee_data_RD.shape # check the new shape (+1 column)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "5. Check the descriptive statistics of the *employee_data_RD* dataset.\n",
    "    - What is the min, max and mean monthly income of employees within this dataset?\n",
    "    - What is the mean job satisfaction and what is its standard deviation?\n",
    "    - How many employees within this dataset have left their employer?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Age</th>\n",
       "      <th>DailyRate</th>\n",
       "      <th>DistanceFromHome</th>\n",
       "      <th>Education</th>\n",
       "      <th>EmployeeCount</th>\n",
       "      <th>EmployeeNumber</th>\n",
       "      <th>EnvironmentSatisfaction</th>\n",
       "      <th>HourlyRate</th>\n",
       "      <th>JobInvolvement</th>\n",
       "      <th>JobLevel</th>\n",
       "      <th>JobSatisfaction</th>\n",
       "      <th>MonthlyIncome</th>\n",
       "      <th>MonthlyRate</th>\n",
       "      <th>NumCompaniesWorked</th>\n",
       "      <th>PercentSalaryHike</th>\n",
       "      <th>PerformanceRating</th>\n",
       "      <th>RelationshipSatisfaction</th>\n",
       "      <th>StandardHours</th>\n",
       "      <th>StockOptionLevel</th>\n",
       "      <th>TotalWorkingYears</th>\n",
       "      <th>TrainingTimesLastYear</th>\n",
       "      <th>WorkLifeBalance</th>\n",
       "      <th>YearsAtCompany</th>\n",
       "      <th>YearsInCurrentRole</th>\n",
       "      <th>YearsSinceLastPromotion</th>\n",
       "      <th>YearsWithCurrManager</th>\n",
       "      <th>dummy_retained</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.0</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.0</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "      <td>961.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>37.042664</td>\n",
       "      <td>806.851197</td>\n",
       "      <td>9.144641</td>\n",
       "      <td>2.899063</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1006.503642</td>\n",
       "      <td>2.744017</td>\n",
       "      <td>66.167534</td>\n",
       "      <td>2.741935</td>\n",
       "      <td>1.977107</td>\n",
       "      <td>2.726327</td>\n",
       "      <td>6281.252862</td>\n",
       "      <td>14284.865765</td>\n",
       "      <td>2.733611</td>\n",
       "      <td>15.291363</td>\n",
       "      <td>3.162331</td>\n",
       "      <td>2.708637</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0.804370</td>\n",
       "      <td>11.342352</td>\n",
       "      <td>2.792924</td>\n",
       "      <td>2.725286</td>\n",
       "      <td>6.864724</td>\n",
       "      <td>4.155047</td>\n",
       "      <td>2.137357</td>\n",
       "      <td>4.084287</td>\n",
       "      <td>0.861602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>9.178964</td>\n",
       "      <td>402.513333</td>\n",
       "      <td>8.122044</td>\n",
       "      <td>1.024293</td>\n",
       "      <td>0.0</td>\n",
       "      <td>602.681958</td>\n",
       "      <td>1.102567</td>\n",
       "      <td>20.249281</td>\n",
       "      <td>0.714435</td>\n",
       "      <td>1.152667</td>\n",
       "      <td>1.101620</td>\n",
       "      <td>4895.835087</td>\n",
       "      <td>7081.255126</td>\n",
       "      <td>2.502874</td>\n",
       "      <td>3.701129</td>\n",
       "      <td>0.368946</td>\n",
       "      <td>1.070640</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.857092</td>\n",
       "      <td>7.797326</td>\n",
       "      <td>1.314103</td>\n",
       "      <td>0.716964</td>\n",
       "      <td>6.024119</td>\n",
       "      <td>3.646045</td>\n",
       "      <td>3.200565</td>\n",
       "      <td>3.571031</td>\n",
       "      <td>0.345497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>102.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1009.000000</td>\n",
       "      <td>2094.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>30.000000</td>\n",
       "      <td>469.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>460.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>49.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2741.000000</td>\n",
       "      <td>8007.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>12.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>36.000000</td>\n",
       "      <td>810.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1014.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>66.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>4374.000000</td>\n",
       "      <td>14242.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>43.000000</td>\n",
       "      <td>1153.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1539.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>84.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>7655.000000</td>\n",
       "      <td>20284.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>16.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>7.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>1496.000000</td>\n",
       "      <td>29.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2068.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>19999.000000</td>\n",
       "      <td>26999.000000</td>\n",
       "      <td>9.000000</td>\n",
       "      <td>25.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>80.0</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>40.000000</td>\n",
       "      <td>18.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>17.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              Age    DailyRate  DistanceFromHome   Education  EmployeeCount  \\\n",
       "count  961.000000   961.000000        961.000000  961.000000          961.0   \n",
       "mean    37.042664   806.851197          9.144641    2.899063            1.0   \n",
       "std      9.178964   402.513333          8.122044    1.024293            0.0   \n",
       "min     18.000000   102.000000          1.000000    1.000000            1.0   \n",
       "25%     30.000000   469.000000          2.000000    2.000000            1.0   \n",
       "50%     36.000000   810.000000          7.000000    3.000000            1.0   \n",
       "75%     43.000000  1153.000000         14.000000    4.000000            1.0   \n",
       "max     60.000000  1496.000000         29.000000    5.000000            1.0   \n",
       "\n",
       "       EmployeeNumber  EnvironmentSatisfaction  HourlyRate  JobInvolvement  \\\n",
       "count      961.000000               961.000000  961.000000      961.000000   \n",
       "mean      1006.503642                 2.744017   66.167534        2.741935   \n",
       "std        602.681958                 1.102567   20.249281        0.714435   \n",
       "min          2.000000                 1.000000   30.000000        1.000000   \n",
       "25%        460.000000                 2.000000   49.000000        2.000000   \n",
       "50%       1014.000000                 3.000000   66.000000        3.000000   \n",
       "75%       1539.000000                 4.000000   84.000000        3.000000   \n",
       "max       2068.000000                 4.000000  100.000000        4.000000   \n",
       "\n",
       "         JobLevel  JobSatisfaction  MonthlyIncome   MonthlyRate  \\\n",
       "count  961.000000       961.000000     961.000000    961.000000   \n",
       "mean     1.977107         2.726327    6281.252862  14284.865765   \n",
       "std      1.152667         1.101620    4895.835087   7081.255126   \n",
       "min      1.000000         1.000000    1009.000000   2094.000000   \n",
       "25%      1.000000         2.000000    2741.000000   8007.000000   \n",
       "50%      2.000000         3.000000    4374.000000  14242.000000   \n",
       "75%      3.000000         4.000000    7655.000000  20284.000000   \n",
       "max      5.000000         4.000000   19999.000000  26999.000000   \n",
       "\n",
       "       NumCompaniesWorked  PercentSalaryHike  PerformanceRating  \\\n",
       "count          961.000000         961.000000         961.000000   \n",
       "mean             2.733611          15.291363           3.162331   \n",
       "std              2.502874           3.701129           0.368946   \n",
       "min              0.000000          11.000000           3.000000   \n",
       "25%              1.000000          12.000000           3.000000   \n",
       "50%              2.000000          14.000000           3.000000   \n",
       "75%              4.000000          18.000000           3.000000   \n",
       "max              9.000000          25.000000           4.000000   \n",
       "\n",
       "       RelationshipSatisfaction  StandardHours  StockOptionLevel  \\\n",
       "count                961.000000          961.0        961.000000   \n",
       "mean                   2.708637           80.0          0.804370   \n",
       "std                    1.070640            0.0          0.857092   \n",
       "min                    1.000000           80.0          0.000000   \n",
       "25%                    2.000000           80.0          0.000000   \n",
       "50%                    3.000000           80.0          1.000000   \n",
       "75%                    4.000000           80.0          1.000000   \n",
       "max                    4.000000           80.0          3.000000   \n",
       "\n",
       "       TotalWorkingYears  TrainingTimesLastYear  WorkLifeBalance  \\\n",
       "count         961.000000             961.000000       961.000000   \n",
       "mean           11.342352               2.792924         2.725286   \n",
       "std             7.797326               1.314103         0.716964   \n",
       "min             0.000000               0.000000         1.000000   \n",
       "25%             6.000000               2.000000         2.000000   \n",
       "50%            10.000000               3.000000         3.000000   \n",
       "75%            16.000000               3.000000         3.000000   \n",
       "max            40.000000               6.000000         4.000000   \n",
       "\n",
       "       YearsAtCompany  YearsInCurrentRole  YearsSinceLastPromotion  \\\n",
       "count      961.000000          961.000000               961.000000   \n",
       "mean         6.864724            4.155047                 2.137357   \n",
       "std          6.024119            3.646045                 3.200565   \n",
       "min          0.000000            0.000000                 0.000000   \n",
       "25%          3.000000            2.000000                 0.000000   \n",
       "50%          5.000000            3.000000                 1.000000   \n",
       "75%          9.000000            7.000000                 2.000000   \n",
       "max         40.000000           18.000000                15.000000   \n",
       "\n",
       "       YearsWithCurrManager  dummy_retained  \n",
       "count            961.000000      961.000000  \n",
       "mean               4.084287        0.861602  \n",
       "std                3.571031        0.345497  \n",
       "min                0.000000        0.000000  \n",
       "25%                2.000000        1.000000  \n",
       "50%                3.000000        1.000000  \n",
       "75%                7.000000        1.000000  \n",
       "max               17.000000        1.000000  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "employee_data_RD.describe()\n",
    "\n",
    "# Answer 1: min: 1009, max: 19999, mean: 6281\n",
    "# Answer 2: mean: 2.73, std: 1.1 (range 1-4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    828\n",
       "0    133\n",
       "Name: dummy_retained, dtype: int64"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "employee_data_RD['dummy_retained'].value_counts() \n",
    "\n",
    "# Answer 3: 133 employees have left their employer"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "4. Visualize\n",
    "    - The distribution of job satisfaction within the dataset.\n",
    "    - The distribution of job satisfaction within the dataset, separately for those who work overtime and thos who do not\n",
    "        - Hint: *OverTime == 'Yes\"*\n",
    "    - The correlation between job satisfaction and monthly income (also including a regression line)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.axis.XTick at 0x1c2236e080>,\n",
       "  <matplotlib.axis.XTick at 0x1c2236e5c0>,\n",
       "  <matplotlib.axis.XTick at 0x1c2236ef98>,\n",
       "  <matplotlib.axis.XTick at 0x1c22411b38>],\n",
       " <a list of 4 Text xticklabel objects>)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Distribution of job satisfaction\n",
    "# with matplotlib\n",
    "plt.hist(employee_data_RD['JobSatisfaction'],bins=[0.5,1.5,2.5,3.5,4.5], rwidth = 0.8, align='mid', density=True, alpha=0.5)\n",
    "plt.xlabel('Job Satisfaction')\n",
    "plt.xticks([1,2,3,4])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c20ca8588>"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# with seaborn\n",
    "sns.distplot(employee_data_RD['JobSatisfaction'],axlabel='Job Satisfaction')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([<matplotlib.axis.XTick at 0x1c22bc3f98>,\n",
       "  <matplotlib.axis.XTick at 0x1c22bc3860>,\n",
       "  <matplotlib.axis.XTick at 0x1c22bc3588>,\n",
       "  <matplotlib.axis.XTick at 0x1c22c556d8>],\n",
       " <a list of 4 Text xticklabel objects>)"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Distribution of job satisfaction, separately with/without overtime\n",
    "# with matplotlib\n",
    "plt.hist(employee_data_RD.loc[employee_data_RD['OverTime']=='No','JobSatisfaction'],bins=[0.5,1.5,2.5,3.5,4.5], rwidth = 0.5, align='mid', density=True, alpha=0.5)\n",
    "plt.hist(employee_data_RD.loc[employee_data_RD['OverTime']=='Yes','JobSatisfaction'],bins=[0.75,1.75,2.75,3.75,4.75], rwidth = 0.5, align='mid', density=True, alpha=0.5)\n",
    "plt.xlabel('Job Satisfaction')\n",
    "plt.xticks([1,2,3,4])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c2242a5c0>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# with seaborn\n",
    "sns.distplot(employee_data[employee_data['OverTime']=='No']['JobSatisfaction'])\n",
    "sns.distplot(employee_data[employee_data['OverTime']=='Yes']['JobSatisfaction'],axlabel='Job satisfaction')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1c22c72b38>"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Correlation job satisfaction and monthly income\n",
    "\n",
    "sns.regplot(x='JobSatisfaction',y='MonthlyIncome',data=employee_data_RD)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "5. Run a regression with your new variable *dummy_retained* as the response variable and your choice of potentially meaningful input variables (e.g. monthly income, overtime, job satisfaction etc.) to predict whether an employee will stay with her employer.\n",
    "    - Hint: Use *smf.logit()* as the response variable is discrete."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Optimization terminated successfully.\n",
      "         Current function value: 0.323076\n",
      "         Iterations 7\n",
      "                           Logit Regression Results                           \n",
      "==============================================================================\n",
      "Dep. Variable:         dummy_retained   No. Observations:                  961\n",
      "Model:                          Logit   Df Residuals:                      948\n",
      "Method:                           MLE   Df Model:                           12\n",
      "Date:                Wed, 25 Sep 2019   Pseudo R-squ.:                  0.1964\n",
      "Time:                        13:31:01   Log-Likelihood:                -310.48\n",
      "converged:                       True   LL-Null:                       -386.36\n",
      "Covariance Type:            nonrobust   LLR p-value:                 2.473e-26\n",
      "===============================================================================================\n",
      "                                  coef    std err          z      P>|z|      [0.025      0.975]\n",
      "-----------------------------------------------------------------------------------------------\n",
      "Intercept                       0.6150      0.535      1.150      0.250      -0.433       1.663\n",
      "C(JobSatisfaction)[T.2]         0.3486      0.315      1.108      0.268      -0.268       0.965\n",
      "C(JobSatisfaction)[T.3]         0.3888      0.273      1.426      0.154      -0.146       0.923\n",
      "C(JobSatisfaction)[T.4]         1.0681      0.299      3.571      0.000       0.482       1.654\n",
      "C(WorkLifeBalance)[T.2]         1.0984      0.380      2.893      0.004       0.354       1.842\n",
      "C(WorkLifeBalance)[T.3]         1.3491      0.352      3.837      0.000       0.660       2.038\n",
      "C(WorkLifeBalance)[T.4]         0.7738      0.451      1.716      0.086      -0.110       1.658\n",
      "C(OverTime)[T.Yes]             -1.6072      0.213     -7.529      0.000      -2.026      -1.189\n",
      "C(MaritalStatus)[T.Married]    -0.4055      0.311     -1.302      0.193      -1.016       0.205\n",
      "C(MaritalStatus)[T.Single]     -1.3128      0.311     -4.220      0.000      -1.923      -0.703\n",
      "C(Gender)[T.Male]              -0.4672      0.221     -2.116      0.034      -0.900      -0.034\n",
      "MonthlyIncome                   0.0002   3.53e-05      4.746      0.000    9.82e-05       0.000\n",
      "TrainingTimesLastYear           0.1431      0.086      1.672      0.094      -0.025       0.311\n",
      "===============================================================================================\n"
     ]
    }
   ],
   "source": [
    "# Logit regression to predict whether an employee stays\n",
    "results_logit = smf.logit('dummy_retained ~ MonthlyIncome + C(JobSatisfaction) + C(WorkLifeBalance) + C(OverTime) + TrainingTimesLastYear + C(MaritalStatus) + C(Gender)', data = employee_data_RD).fit()\n",
    "\n",
    "print(results_logit.summary())"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
